{"version":3,"sources":["../../src/app.js"],"names":["getCountries","axios","get","result","console","log","data","countries","getCountry","countryCode","country","find","alpha2Code","toLowerCase","name","getCountryNameByIP","ipInfo","render","appRoot","document","getElementById","template","ReactDOM"],"mappings":";;;;;;AAAA,IAAMA,YAAY;AAAA,qEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACIC,KAAK,CAACC,GAAN,CAAU,sCAAV,CADJ;;AAAA;AACXC,YAAAA,MADW;AAEjBC,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAM,CAACG,IAA/B;AAFiB,6CAGVH,MAAM,CAACG,IAHG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZN,YAAY;AAAA;AAAA;AAAA,GAAlB;;AAMA,IAAMO,SAAS,GAAGP,YAAY,EAA9B;;AAEA,IAAMQ,UAAU;AAAA,sEAAG,kBAAOC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACMR,KAAK,CAACC,GAAN,CAAU,sCAAV,CADN;;AAAA;AACTC,YAAAA,MADS;AAETI,YAAAA,SAFS,GAEGJ,MAAM,CAACG,IAFV;AAGTI,YAAAA,OAHS,GAGCH,SAAS,CAACI,IAAV,CAAe,UAACD,OAAD;AAAA,qBAAaA,OAAO,CAACE,UAAR,CAAmBC,WAAnB,OAAqCJ,WAAW,CAACI,WAAZ,EAAlD;AAAA,aAAf,CAHD;AAIfT,YAAAA,OAAO,CAACC,GAAR,CAAYK,OAAO,CAACI,IAApB;AAJe,8CAKRJ,OALQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVF,UAAU;AAAA;AAAA;AAAA,GAAhB;;AAQA,IAAME,OAAO,GAAGF,UAAU,CAAC,IAAD,CAA1B;;AAEA,IAAMO,kBAAkB;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFd,KAAK,CAACC,GAAN,CAAU,6CAAV,CADE;;AAAA;AACjBc,YAAAA,MADiB;AAEvBZ,YAAAA,OAAO,CAACC,GAAR,CAAa,UAAb,EAAyBW,MAAM,CAACV,IAAP,CAAYI,OAArC;AACMD,YAAAA,WAHiB,GAGHO,MAAM,CAACV,IAAP,CAAYI,OAHT;AAAA;AAAA,mBAIFT,KAAK,CAACC,GAAN,CAAU,sCAAV,CAJE;;AAAA;AAIjBC,YAAAA,MAJiB;AAKjBI,YAAAA,SALiB,GAKLJ,MAAM,CAACG,IALF;AAMjBI,YAAAA,OANiB,GAMPH,SAAS,CAACI,IAAV,CAAe,UAACD,OAAD;AAAA,qBAAaA,OAAO,CAACE,UAAR,CAAmBC,WAAnB,OAAqCJ,WAAW,CAACI,WAAZ,EAAlD;AAAA,aAAf,CANO;AAOvBT,YAAAA,OAAO,CAACC,GAAR,CAAYK,OAAO,CAACI,IAApB;AACAG,YAAAA,MAAM,CAACP,OAAO,CAACI,IAAT,CAAN;;AARuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAlBC,kBAAkB;AAAA;AAAA;AAAA,GAAxB;;AAWAA,kBAAkB;AAIlB,IAAMG,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAhB;;AAEA,IAAMH,MAAM,GAAG,SAATA,MAAS,CAACP,OAAD,EAAa;AACxB,MAAMW,QAAQ,gBACV,8CACI,+BAAIX,OAAJ,CADJ,CADJ;AAMAY,EAAAA,QAAQ,CAACL,MAAT,CAAgBI,QAAhB,EAA0BH,OAA1B;AACH,CARD;;AAUAD,MAAM","sourcesContent":["const getCountries = async () => {\n    const result = await axios.get('https://restcountries.eu/rest/v2/all')\n    console.log('result: ', result.data)\n    return result.data\n}\n\nconst countries = getCountries()\n\nconst getCountry = async (countryCode) => {\n    const result = await axios.get('https://restcountries.eu/rest/v2/all')\n    const countries = result.data\n    const country = countries.find((country) => country.alpha2Code.toLowerCase() === countryCode.toLowerCase())\n    console.log(country.name)\n    return country\n}\n\nconst country = getCountry('es')\n\nconst getCountryNameByIP = async ()=>{\n    const ipInfo = await axios.get('https://ipinfo.io/json?token=2ad24e9889b095')\n    console.log( 'ipInfo: ', ipInfo.data.country)\n    const countryCode = ipInfo.data.country\n    const result = await axios.get('https://restcountries.eu/rest/v2/all')\n    const countries = result.data\n    const country = countries.find((country) => country.alpha2Code.toLowerCase() === countryCode.toLowerCase())\n    console.log(country.name)\n    render(country.name)\n}\n\ngetCountryNameByIP()\n\n\n\nconst appRoot = document.getElementById('appRoot')\n\nconst render = (country) => {\n    const template = (\n        <div>\n            <p>{country}</p>\n        </div>\n    )\n\n    ReactDOM.render(template, appRoot)\n}\n\nrender()"],"file":"app.js"}